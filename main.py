from vosk import Model, KaldiRecognizer

import sounddevice as sd
import queue
import sqlite3
import json

MODEL_PATH = "vosk-model-small-ru-0.22"  # –ü—É—Ç—å –∫ –º–æ–¥–µ–ª–∏
DB_PATH = "database.db"
SAMPLE_RATE = 16000

# === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===
model = Model(MODEL_PATH)
recognizer = KaldiRecognizer(model, SAMPLE_RATE)
audio_queue = queue.Queue()

sd.default.device = 1  # ‚Üê –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞

def text_to_sql(text):
    text = text.lower()

    if "–ø–æ–∫–∞–∑–∞—Ç—å" in text and "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª" in text:
        return "SELECT * FROM users;"
    elif "—É–¥–∞–ª–∏—Ç—å" in text and "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª" in text:
        return "DELETE FROM users;"
    elif "–¥–æ–±–∞–≤–∏—Ç—å" in text and "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª" in text:
        parts = text.split()

        if len(parts) >= 3:
            name = parts[-1]
            return f"INSERT INTO users (name) VALUES ('{name}');"
        
    return None

conn = sqlite3.connect(DB_PATH)
cur = conn.cursor()

cur.execute("""
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT
);
""")
conn.commit()

def callback(indata, frames, time, status):
    audio_queue.put(bytes(indata))

print("üéô –ì–æ–≤–æ—Ä–∏ SQL-–∫–æ–º–∞–Ω–¥—ã. (Ctrl+C ‚Äî –≤—ã—Ö–æ–¥)")

with sd.RawInputStream(samplerate=SAMPLE_RATE, blocksize=8000, dtype='int16',
                       channels=1, callback=callback):
    try:
        while True:
            data = audio_queue.get()

            if recognizer.AcceptWaveform(data):
                result = json.loads(recognizer.Result())
                text = result.get("text", "")

                if text:
                    print("üó£", text)
                    sql = text_to_sql(text)

                    if sql:
                        print(f"üíæ SQL ‚Üí {sql}")
                        
                        try:
                            cur.execute(sql)
                            conn.commit()
                            rows = cur.fetchall() if sql.strip().lower().startswith("select") else None

                            if rows:
                                for r in rows:
                                    print("üìÑ", r)
                            else:
                                print("‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.")

                        except Exception as e:
                            print("‚ùå –û—à–∏–±–∫–∞ SQL:", e)

                    else:
                        print("ü§î –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—É.")
                        
    except KeyboardInterrupt:
        print("\n‚úÖ –†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        conn.close()